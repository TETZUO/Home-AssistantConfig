- id: turn_on_lights_when_sun_sets
  alias: Turn on lights when sun sets
  trigger:
    platform: sun
    event: sunset
    offset: "-00:10:00"
  action:
    service: switch.turn_on
    entity_id: group.outdoor_lights
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.holiday_mode
        state: 'off'

- id: turn_on_lights_when_sun_sets_holiday
  alias: Turn on lights when sun sets for holiday
  trigger:
    platform: sun
    event: sunset
    offset: "-00:10:00"
  action:
    service: switch.turn_on
    entity_id: group.holiday_lights
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.holiday_mode
        state: 'on'

- id: turn_off_holiday_and_on_outside_lights
  alias: Turn off holiday lights and on normal lights
  trigger:
    platform: time
    at: '23:00:00'
  action:
    - service: switch.turn_off
      entity_id: switch.holiday_lights_148
    - service: switch.turn_on
      entity_id: switch.front_outside_lights_140
#    - service: switch.turn_on
#      entity_id: switch.front_walk_lights_31
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.holiday_mode
        state: 'on'

- id: turn_off_front_walk_lights
  alias: Turn off front walks lights a 2300
  trigger:
    platform: time
    at: '23:00:00'
  action:
      - service: switch.turn_off
        entity_id: switch.front_walk_lights_31

- id: turn_off_lights_when_sun_rises
  alias: Turn off lights when sun rises
  trigger:
    platform: sun
    event: sunrise
    offset: "+00:10:00"
  action:
    service: switch.turn_off
    entity_id: group.outdoor_lights

- id: turn_on_norbert_in_am
  alias: Turn Norbert on in AM
  trigger:
    platform: time
    at: '07:30:00'
  action:
    service: switch.turn_on
    entity_id: switch.norbert_22

- id: turn_off_norbert_in_pm
  alias: Turn Norbert off in PM
  trigger:
    platform: time
    at: '20:30:00'
  action:
      - service: switch.turn_off
        entity_id: switch.norbert_22

- id: turn_off_snakes_in_am
  alias: Turn snakes off in AM
  trigger:
    platform: time
    at: '08:00:00'
  action:
    service: switch.turn_off
    entity_id: switch.snake_heaters_124

- id: turn_on_snakes_in_pm
  alias: Turn snakes on in PM
  trigger:
    platform: time
    at: '20:00:00'
  action:
      - service: switch.turn_on
        entity_id: switch.snake_heaters_124

- id: turn_off_dining_room
  alias: 'Turn off dining room light when at <50 brightness for set duration'
  trigger:
    - platform: template
      value_template: '{{ (as_timestamp (now()) -as_timestamp (states.light.dining_room_36.last_updated))|float >= 300 and  (states.light.dining_room_36.attributes.brightness | float <= 50) }}'
  condition:
    condition: template
    value_template: '{{ states.light.dining_room_36.attributes.brightness | float <= 50 }}'
  action:
    service: switch.turn_off
    entity_id: light.dining_room_36

- id: turn_on_night_stuff_work_night
  alias: 'Turn on humidifier and such school/work night'
  trigger:
    platform: time
    at: '22:00:00'
  condition:
    condition: and
    conditions:
      - condition: time
        weekday:
          - mon
          - tue
          - wed
          - thu
          - sun
      - condition: state
        entity_id: input_boolean.vacation_mode
        state: 'off'
  action:
    service: switch.turn_on
    entity_id: switch.master_night_stuff_42

- id: turn_on_night_stuff_weekend_night
  alias: 'Turn on humidifier and such weekend night'
  trigger:
    platform: time
    at: '22:00:00'
  condition:
    condition: and
    conditions:
      - condition: time
        weekday:
          - fri
          - sat
      - condition: state
        entity_id: input_boolean.vacation_mode
        state: 'off'
  action:
    service: switch.turn_on
    entity_id: switch.master_night_stuff_42

- id: turn_off_kids_tv_school_night
  alias: 'Turn off kids TV school night'
  trigger:
    platform: time
    at: '21:00:00'
  condition:
    condition: time
    weekday:
      - mon
      - tue
      - wed
      - thu
      - sun
  action:
    service: switch.turn_off
    entity_id: switch.kids_tv_38

- id: turn_off_kids_tv_weekend_night
  alias: 'Turn off kids TV weekend night'
  trigger:
    platform: time
    at: '22:00:00'
  condition:
    condition: time
    weekday:
      - fri
      - sat
  action:
    service: switch.turn_off
    entity_id: switch.kids_tv_38

- id: turn_on_kids_tv_school_day
  alias: 'Turn on kids TV school days'
  trigger:
    platform: time
    at: '06:00:00'
  condition:
    condition: and
    conditions:
      - condition: time
        weekday:
          - mon
          - tue
          - wed
          - thu
          - fri
      - condition: state
        entity_id: input_boolean.vacation_mode
        state: 'off'
  action:
    service: switch.turn_on
    entity_id: switch.kids_tv_38

- id: turn_on_kids_tv_weekend_day
  alias: 'Turn on kids TV weekend days'
  trigger:
    platform: time
    at: '08:00:00'
  condition:
    condition: and
    conditions:
      - condition: time
        weekday:
          - sat
          - sun
      - condition: state
        entity_id: input_boolean.vacation_mode
        state: 'off'
  action:
    service: switch.turn_on
    entity_id: switch.kids_tv_38

- id: turn_on_living_room_when_sun_sets
  alias: Turn on living room light when sun sets
  trigger:
    platform: sun
    event: sunset
    offset: "-00:60:00"
  action:
    service: switch.turn_on
    entity_id: switch.living_room_37

- id: turn_on_living_room_when_cloud_cover_above_40
  alias: Turn on living room light when cloud cover about 40
  trigger:
    platform: sun
    event: sunset
    offset: "-02:00:00"
  condition:
    - condition: numeric_state
      entity_id: sensor.dark_sky_cloud_coverage
      above: 40
  action:
    service: switch.turn_on
    entity_id: switch.living_room_37

- id: flood_water_heater
  alias: Flood Water Heater
  trigger:
    - platform: state
      entity_id: binary_sensor.leak_water_heater_21
      to: 'on'
  action:
    - service: notify.dantext
      data:
        message: 'WATER DETECTED BY WATER HEATER!'
    - service: notify.danemail
      data:
        message: 'WATER DETECTED BY WATER HEATER!'
    - service: notify.shelleytext
      data:
        message: 'WATER DETECTED BY WATER HEATER!'
    - service: notify.shelleyemail
      data:
        message: 'WATER DETECTED BY WATER HEATER!'

- id: flood_wet_corner
  alias: Flood Wet Corner
  trigger:
    - platform: state
      entity_id: binary_sensor.leak_wet_corner_44
      to: 'on'
  action:
    - service: notify.dantext
      data:
        message: 'WATER DETECTED IN WET CORNER!'
    - service: notify.danemail
      data:
        message: 'WATER DETECTED IN WET CORNER!'
    - service: notify.shelleytext
      data:
        message: 'WATER DETECTED IN WET CORNER!'
    - service: notify.shelleyemail
      data:
        message: 'WATER DETECTED IN WET CORNER!'

- id: flood_sump_pump
  alias: Flood Sump Pump
  trigger:
    - platform: state
      entity_id: binary_sensor.leak_sump_pump_43
      to: 'on'
  action:
    - service: notify.dantext
      data:
        message: 'WATER DETECTED BY SUMP PUMP!'
    - service: notify.danemail
      data:
        message: 'WATER DETECTED BY SUMP PUMP!'
    - service: notify.shelleytext
      data:
        message: 'WATER DETECTED BY SUMP PUMP!'
    - service: notify.shelleyemail
      data:
        message: 'WATER DETECTED BY SUMP PUMP!'

- id: basement_door_opened
  alias: Basement Door Opened
  trigger:
    - platform: state
      entity_id: binary_sensor.door_basement_52
      to: 'on'
  condition:
    condition: state
    entity_id: switch.door_basement_52
    state: 'on'
  action:
    - service: notify.dantext
      data:
        message: 'Basement door opened!'

- id: chest_freezer_left_open
  alias: Chest Freezer Left Open
  trigger:
    platform: state
    entity_id: sensor.chest_freezer_state
    from: 'Closed'
    to: 'Open'
    for:
       minutes: 3
  action:
    - service: notify.dantext
      data:
        message: 'CHEST FREEZER LEFT OPEN!'
    - service: notify.danemail
      data:
        message: 'CHEST FREEZER LEFT OPEN!'

- id: update_notifications
  alias: Update notifications
  trigger:
    - platform: state
      entity_id: updater.updater
  action:
    service: notify.danemail
    data:
      title: 'New Home Assistant Release'
      message: "Home Assistant  {{ states.updater.updater.state }}  is now available."

#- id: turn_on_coffee_pot_early_day
#  alias: 'Turn on the coffee pot on Dan early day'
#  trigger:
#    platform: time
#    at: '06:00:00'
#  condition:
#    condition: and
#    conditions:
#      - condition: time
#        weekday:
#          - mon
#      - condition: state
#        entity_id: input_boolean.vacation_mode
#        state: 'off'
#  action:
#    service: switch.turn_on
#    entity_id: switch.coffee_pot_129

#- id: turn_on_coffee_pot_normal_day
#  alias: 'Turn on the coffee pot on Dan normal days'
#  trigger:
#    platform: time
#    at: '07:00:00'
#  condition:
#    condition: and
#    conditions:
#      - condition: time
#        weekday:
#          - tue
#          - wed
#          - thu
#          - fri
#      - condition: state
#        entity_id: input_boolean.vacation_mode
#        state: 'off'
#  action:
#    service: switch.turn_on
#    entity_id: switch.coffee_pot_129

- id: turn_off_coffee_pot_weekday
  alias: 'Turn off the coffee pot by 0900'
  trigger:
    platform: time
    at: '09:00:00'
  condition:
    condition: time
    weekday:
      - mon
      - tue
      - wed
      - thu
      - fri
  action:
    service: switch.turn_off
    entity_id: switch.coffee_pot_129

- id: turn_off_coffee_pot_weekend
  alias: 'Turn off the coffee pot by 1300'
  trigger:
    platform: time
    at: '13:00:00'
  condition:
    condition: time
    weekday:
      - sat
      - sun
  action:
    service: switch.turn_off
    entity_id: switch.coffee_pot_129

- id: turn_off_kids_wifi_school_night
  alias: 'Turn off the kids wifi school at 2000'
  trigger:
    platform: time
    at: '20:00:00'
  condition:
    condition: time
    weekday:
      - sun
      - mon
      - tue
      - wed
      - thu
  action:
    service: shell_command.ct_kids_disable

- id: turn_off_kids_wifi_weekend_night
  alias: 'Turn off the kids wifi weekend at 2100'
  trigger:
    platform: time
    at: '21:00:00'
  condition:
    condition: time
    weekday:
      - fri
      - sat
  action:
    service: shell_command.ct_kids_disable

- id: turn_on_kids_wifi_school_day
  alias: 'Turn on the kids wifi school at 0600'
  trigger:
    platform: time
    at: '06:00:00'
  condition:
    condition: time
    weekday:
      - mon
      - tue
      - wed
      - thu
      - fri
  action:
    service: shell_command.ct_kids_enable

- id: turn_on_kids_wifi_weekend_day
  alias: 'Turn on the kids wifi weekend at 0800'
  trigger:
    platform: time
    at: '08:00:00'
  condition:
    condition: time
    weekday:
      - sat
      - sun
  action:
    service: shell_command.ct_kids_enable

#####################################
# THIS BLOCK IS USED WHEN OUT OF TOWN
#####################################
- id: turn_on_den_when_sun_sets
  alias: Turn on den light when sun sets
  trigger:
    platform: sun
    event: sunset
    offset: "-00:60:00"
  condition:
    condition: state
    entity_id: input_boolean.vacation_mode
    state: 'on'
  action:
    - service: shell_command.tplink_den_white

- id: change_den_color_to_red_when_norbert_off
  alias: Change den light color to red when Norbert goes off
  trigger:
    platform: time
    at: '20:35:00'
  condition:
    condition: state
    entity_id: input_boolean.vacation_mode
    state: 'on'
  action:
    - service: shell_command.tplink_den_red

- id: turn_off_den_and_at_random_time
  alias: Turn den off and master on at a semi-random time
  trigger:
    - platform: template
      value_template: "{{ is_state('sensor.time', states('input_number.random_hour')|int ~ ':' ~ states('input_number.random_minute')|int) }}"
  condition:
    condition: state
    entity_id: input_boolean.vacation_mode
    state: 'on'
  action:
    - service: shell_command.tplink_den_off
    - service: light.turn_on
      data:
        entity_id: light.master_1
        brightness: 50
        rgb_color: [ 255,255,255 ]
    - service: light.turn_on
      data:
        entity_id: light.master_2
        brightness: 50
        rgb_color: [ 255,255,255 ]
    - service: homeassistant.turn_on
      entity_id: script.timed_lamp

- id: turn_on_light_for_overnight
  alias: Turn on lights for overnight
  trigger:
    platform: time
    at: '22:30:00'
  condition:
    condition: state
    entity_id: input_boolean.vacation_mode
    state: 'on'
  action:
    service: switch.turn_on
    entity_id: switch.front_outside_lights_140

- id: turn_off_lights_in_the_early_morning
  alias: Turn off lights in the early morning
  trigger:
    platform: time
    at: '06:00:00'
  condition:
    condition: state
    entity_id: input_boolean.vacation_mode
    state: 'on'
  action:
    service: switch.turn_off
    entity_id: switch.front_outside_lights_140

- id: set_random_time
  alias: set_random_time
  trigger:
    - platform: time
      at: '21:00:00'
  action:
    - service: input_number.select_value
      data_template:
        entity_id: input_number.random_hour
        # The endpoint is omitted, see: http://jinja.pocoo.org/docs/dev/templates/#range
        value: '{{ (range(22, 24)|random) }}'
    - service: input_number.select_value
      data_template:
        entity_id: input_number.random_minute
        value: '{{ (range(15, 46)|random) }}'
#####################################
