- id: turn_on_lights_when_sun_sets
  alias: Turn on lights when sun sets
  trigger:
    platform: sun
    event: sunset
    offset: "-00:10:00"
  action:
    service: switch.turn_on
    entity_id: group.outdoor_lights

- id: turn_off_lights_when_sun_rises
  alias: Turn off lights when sun rises
  trigger:
    platform: sun
    event: sunrise
    offset: "+00:10:00"
  action:
    service: switch.turn_off
    entity_id: group.outdoor_lights

- id: turn_on_norbert_in_am
  alias: Turn Norbert on in AM
  trigger:
    platform: time
    after: '07:30:00'
  action:
    service: switch.turn_on
    entity_id: switch.norbert_22

- id: turn_off_norbert_in_pm
  alias: Turn Norbert off in PM
  trigger:
    platform: time
    after: '20:30:00'
  action:
      - service: switch.turn_off
        entity_id: switch.norbert_22

- id: turn_off_snakes_in_am
  alias: Turn snakes off in AM
  trigger:
    platform: time
    after: '08:00:00'
  action:
    service: switch.turn_off
    entity_id: switch.snake_heaters_124

- id: turn_on_snakes_in_pm
  alias: Turn snakes on in PM
  trigger:
    platform: time
    after: '20:00:00'
  action:
      - service: switch.turn_on
        entity_id: switch.snake_heaters_124

- id: turn_off_dining_room
  alias: 'Turn off dining room light when at <50 brightness for set duration'
  trigger:
    - platform: template
      value_template: '{{ (as_timestamp (now()) -as_timestamp (states.light.dining_room_36.last_updated))|float >= 300 and  (states.light.dining_room_36.attributes.brightness | float <= 50) }}'
  condition:
    condition: template
    value_template: '{{ states.light.dining_room_36.attributes.brightness | float <= 50 }}'
  action:
    service: switch.turn_off
    entity_id: light.dining_room_36

- id: turn_on_night_stuff_work_night
  alias: 'Turn on humidifier and such school/work night'
  trigger:
    platform: time
    after: '21:00:00'
  condition:
    condition: time
    weekday:
      - mon
      - tue
      - wed
      - thu
      - sun
  action:
    service: switch.turn_on
    entity_id: switch.master_night_stuff_42

- id: turn_on_night_stuff_weekend_night
  alias: 'Turn on humidifier and such weekend night'
  trigger:
    platform: time
    after: '22:00:00'
  condition:
    condition: time
    weekday:
      - fri
      - sat
  action:
    service: switch.turn_on
    entity_id: switch.master_night_stuff_42

- id: turn_off_kids_tv_school_night
  alias: 'Turn off kids TV school night'
  trigger:
    platform: time
    after: '21:00:00'
  condition:
    condition: time
    weekday:
      - mon
      - tue
      - wed
      - thu
      - sun
  action:
    service: switch.turn_off
    entity_id: switch.kids_tv_38

- id: turn_off_kids_tv_weekend_night
  alias: 'Turn off kids TV weekend night'
  trigger:
    platform: time
    after: '22:00:00'
  condition:
    condition: time
    weekday:
      - fri
      - sat
  action:
    service: switch.turn_off
    entity_id: switch.kids_tv_38

- id: turn_on_kids_tv_school_day
  alias: 'Turn on kids TV school days'
  trigger:
    platform: time
    after: '06:00:00'
  condition:
    condition: time
    weekday:
      - mon
      - tue
      - wed
      - thu
      - fri
  action:
    service: switch.turn_on
    entity_id: switch.kids_tv_38

- id: turn_on_kids_tv_weekend_day
  alias: 'Turn on kids TV weekend days'
  trigger:
    platform: time
    after: '08:00:00'
  condition:
    condition: time
    weekday:
      - sat
      - sun
  action:
    service: switch.turn_on
    entity_id: switch.kids_tv_38

- id: turn_on_living_room_when_sun_sets
  alias: Turn on living room light when sun sets
  trigger:
    platform: sun
    event: sunset
    offset: "-00:60:00"
  action:
    service: switch.turn_on
    entity_id: switch.living_room_37

- id: flood_water_heater
  alias: Flood Water Heater
  trigger:
    - platform: state
      entity_id: binary_sensor.leak_water_heater_21
      state: 'on'
  action:
    - service: notify.dantext
      data:
        message: 'WATER DETECTED BY WATER HEATER!'
    - service: notify.danemail
      data:
        message: 'WATER DETECTED BY WATER HEATER!'
    - service: notify.shelleytext
      data:
        message: 'WATER DETECTED BY WATER HEATER!'
    - service: notify.shelleyemail
      data:
        message: 'WATER DETECTED BY WATER HEATER!'

- id: flood_wet_corner
  alias: Flood Wet Corner
  trigger:
    - platform: state
      entity_id: binary_sensor.leak_wet_corner_44
      state: 'on'
  action:
    - service: notify.dantext
      data:
        message: 'WATER DETECTED IN WET CORNER!'
    - service: notify.danemail
      data:
        message: 'WATER DETECTED IN WET CORNER!'
    - service: notify.shelleytext
      data:
        message: 'WATER DETECTED IN WET CORNER!'
    - service: notify.shelleyemail
      data:
        message: 'WATER DETECTED IN WET CORNER!'

- id: flood_sump_pump
  alias: Flood Sump Pump
  trigger:
    - platform: state
      entity_id: binary_sensor.leak_sump_pump_43
      state: 'on'
  action:
    - service: notify.dantext
      data:
        message: 'WATER DETECTED BY SUMP PUMP!'
    - service: notify.danemail
      data:
        message: 'WATER DETECTED BY SUMP PUMP!'
    - service: notify.shelleytext
      data:
        message: 'WATER DETECTED BY SUMP PUMP!'
    - service: notify.shelleyemail
      data:
        message: 'WATER DETECTED BY SUMP PUMP!'

- id: update_notifications
  alias: Update notifications
  trigger:
    - platform: state
      entity_id: updater.updater
  action:
    service: notify.danemail
    data: 
      title: 'New Home Assistant Release'
      message: "Home Assistant  {{ states.updater.updater.state }}  is now available."