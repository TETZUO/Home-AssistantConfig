- id: set_theme_on_startup
  alias: 'Set theme at startup'
  initial_state: 'on'
  trigger:
    - platform: homeassistant
      event: start
  action:
    service: frontend.set_theme
    data:
      name: darkred

- id: update_notifications
  alias: Update notifications
  trigger:
    - platform: state
      entity_id: updater.updater
  action:
    service: notify.danemail
    data:
      title: 'New Home Assistant Release'
      message: "Home Assistant  {{ states.updater.updater.state }}  is now available."

- id: chest_freezer_left_open
  alias: Chest Freezer Left Open
  trigger:
    platform: state
    entity_id: sensor.chest_freezer_state
    from: 'Closed'
    to: 'Open'
    for:
       minutes: 3
  action:
    - service: notify.dantext
      data:
        message: 'CHEST FREEZER LEFT OPEN!'
    - service: notify.danemail
      data:
        message: 'CHEST FREEZER LEFT OPEN!'

- id: safe_opened
  alias: Safe Opened
  trigger:
    platform: state
    entity_id: sensor.safe_state
    from: 'Closed'
    to: 'Open'
  action:
    - service: notify.dantext
      data:
        message: 'SAFE OPENED!'
    - service: notify.danemail
      data:
        message: 'SAFE OPENED!'
    - service: notify.shelleytext
      data:
        message: 'SAFE OPENED!'
    - service: notify.shelleyemail
      data:
        message: 'SAFE OPENED!'

#- alias: Monitor Traffic
#  trigger:
#    platform: state
#    entity_id: sensor.snmp_wan_in
#  action:
#    - service: input_slider.select_value
#      data_template:
#        entity_id: input_slider.internet_traffic_delta_in
#        value: '{{ ((trigger.to_state.state | int - trigger.from_state.state | int) * 8 ) / ( as_timestamp(trigger.to_state.last_updated) - as_timestamp(trigger.from_state.last_updated) ) }}'

#- alias: Monitor Traffic
#  trigger:
#    platform: state
#    entity_id: sensor.snmp_wan_out
#  action:
#    - service: input_slider.select_value
#      data_template:
#        entity_id: input_slider.internet_traffic_delta_out
#        value: '{{ ((trigger.to_state.state | int - trigger.from_state.state | int) * 8 ) / ( as_timestamp(trigger.to_state.last_updated) - as_timestamp(trigger.from_state.last_updated) ) }}'

- alias: Notify When Dan Leaving Work
  trigger:
    platform: zone
    entity_id: device_tracker.dan_owntracks
    zone: zone.dan_work
    event: leave
  condition:
    condition: time
    after: '16:00:00'
    before: '18:00:00'
    weekday:
      - mon
      - tue
      - wed
      - thu
      - fri
  action:
    service: notify.dantext
    data_template:
      message: >
        Dan is {{ states.sensor.dan_location_to_home.state_with_unit }} from home!

- alias: Notify When Shelley Leaving Work
  trigger:
    platform: zone
    entity_id: device_tracker.shelley_owntracks
    zone: zone.shelley_work
    event: leave
  condition:
    condition: time
    after: '07:00:00'
    before: '08:00:00'
  action:
    service: notify.dantext
    data_template:
      message: >
        Shelley is {{ states.sensor.shelley_location_to_home.state_with_unit }} from home!

- alias: Reset Home Energy Meter kWh
  action:
  - data:
      node_id: 42
    service: zwave.reset_node_meters
  condition: []
  id: '1513310745263'
  trigger:
  - event_data: {}
    event_type: ''
    platform: event

- id: '15033356445646'
  alias: wallmote test
  trigger:
  - event_data:
      entity_id: zwave.wallmote
      scene_id: 1
      scene_data: 0
    event_type: zwave.scene_activated
    platform: event
  condition: []
  action:
    service: notify.dantext
    data_template:
      message: >
        Testing!

- alias: Wallmote - Test
  hide_entity: true
  initial_state: true
  trigger:
    platform: event
    event_type: zwave.scene_activated
    event_data:
      entity_id: zwave.aeotec_zw130_wallmote_quad
      scene_id: 1
      scene_data: 0
  action:
    service: light.toggle
    entity_id: light.den_2
#    service: notify.dantext
#    data_template:
#      message: >
#        This is a test!

- alias: 'Battery Alert'
  trigger:
    - platform: time
      at: '18:00:00'
  condition:
    condition: or
    conditions:
      - condition: template
        value_template: >-
          {%- set threshold = 40 -%}
          {%- for item in states.light if (item.attributes.battery_level is defined and item.attributes['battery_level'] | int < threshold) or ("battery" in item.name | lower and ((item.state | int < threshold and item.state|int != 0) or item.state | lower == "low" or item.state | lower == "unknown")) -%}
          {%- if loop.first -%}
          {{ true }}
          {%- endif -%}
          {%- endfor -%}
      - condition: template
        value_template: >-
          {%- set threshold = 40 -%}
          {%- for item in states.switch if (item.attributes.battery_level is defined and item.attributes['battery_level'] | int < threshold) or ("battery" in item.name | lower and ((item.state | int < threshold and item.state|int != 0) or item.state | lower == "low" or item.state | lower == "unknown")) -%}
          {%- if loop.first -%}
          {{ true }}
          {%- endif -%}
          {%- endfor -%}
      - condition: template
        value_template: >-
          {%- set threshold = 40 -%}
          {%- for item in states.sensor if (item.attributes.battery_level is defined and item.attributes['battery_level'] | int < threshold) or ("battery" in item.name | lower and ((item.state | int < threshold and item.state|int != 0) or item.state | lower == "low" or item.state | lower == "unknown")) -%}
          {%- if loop.first -%}
          {{ true }}
          {%- endif -%}
          {%- endfor -%}
      - condition: template
        value_template: >-
          {%- set threshold = 40 -%}
          {%- for item in states.zwave if (item.attributes.battery_level is defined and item.attributes['battery_level'] | int < threshold) or ("battery" in item.name | lower and ((item.state | int < threshold and item.state|int != 0) or item.state | lower == "low" or item.state | lower == "unknown")) -%}
          {%- if loop.first -%}
          {{ true }}
          {%- endif -%}
          {%- endfor -%}
      - condition: template
        value_template: >-
          {%- set threshold = 40 -%}
          {%- for item in states.lock if (item.attributes.battery_level is defined and item.attributes['battery_level'] | int < threshold) or ("battery" in item.name | lower and ((item.state | int < threshold and item.state|int != 0) or item.state | lower == "low" or item.state | lower == "unknown")) -%}
          {%- if loop.first -%}
          {{ true }}
          {%- endif -%}
          {%- endfor -%}
  action:
    - service: notify.danemail
      data_template:
        message: >-
          {%- set threshold = 40 -%}
          {%- set domains = [states.light, states.switch, states.sensor, states.zwave, states.lock ] -%}
          {%- for domain in domains -%}
          {%- if loop.first -%}
          The following devices have low battery levels:
          {%- endif -%}
          {%- for item in domain if (item.attributes.battery_level is defined and item.attributes['battery_level'] | int < threshold) or ("battery" in item.name | lower and ((item.state | int < threshold and item.state|int != 0) or item.state | lower == "low" or item.state | lower == "unknown")) -%}
          {%- if (item.attributes.battery_level is defined and item.attributes['battery_level'] | int < threshold) %}
          {{ item.name }} ({{ item.attributes['battery_level'] }}),
          {% endif -%}
          {%- if "battery" in item.name | lower and ((item.state | int < threshold and item.state|int != 0) or item.state | lower == "low" or item.state | lower == "unknown") -%}
          {{ item.name }} ({{ item.state }}),
          {% endif -%}
          {%- endfor -%}
          {%- endfor -%}

- id: snmp_monitor_traffic_in
  alias: Monitor Traffic In
  trigger:
    platform: state
    entity_id: sensor.snmp_wan_in
  action:
    - service: input_number.set_value
      data_template:
        entity_id: input_number.internet_traffic_delta_in
        value: '{{ ((trigger.to_state.state | int - trigger.from_state.state | int) * 8 ) / ( as_timestamp(trigger.to_state.last_updated) - as_timestamp(trigger.from_state.last_updated) ) }}'

- id: snmp_monitor_traffic_out
  alias: Monitor Traffic Out
  trigger:
    platform: state
    entity_id: sensor.snmp_wan_out
  action:
    - service: input_number.set_value
      data_template:
        entity_id: input_number.internet_traffic_delta_out
        value: '{{ ((trigger.to_state.state | int - trigger.from_state.state | int) * 8 ) / ( as_timestamp(trigger.to_state.last_updated) - as_timestamp(trigger.from_state.last_updated) ) }}'

- id: set_tts_endpoint_options
  alias: Set TTS Endpoint Options
  trigger:
    platform: time
    minutes: '/10'
    seconds: 00
  action:
     service: input_select.select_option
     data_template:
      entity_id: input_select.tts_endpoint_select
      options: >-
        {%- set domains = [states.media_player ] -%}
        {%- for domain in domains -%}
        {%- if loop.first -%}
        {%- endif -%}
        {%- for item in domain if (item.attributes.media_content_type is defined and item.attributes['media_content_type'] == 'standby' and item.name != 'This Device' ) -%}
        {%- if (item.attributes.media_content_type is defined and item.attributes['media_content_type'] == 'standby' and item.name != 'This Device' ) -%}
        {{ item.name }}
        {% endif -%}
        {%- if "standby" in item.name -%}
        {{ item.name }} ({{ item.state }}),
        {% endif -%}
        {%- endfor -%}
        {%- endfor -%}