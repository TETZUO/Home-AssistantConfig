#####
### Sets the main thermostat fan_mode when the hvac_fan_mode input_select is changed
#####
- alias: 'Set main thermostat fan_mode based on input_select'
  trigger:
    platform: state
    entity_id: input_select.hvac_fan_mode_main
  action:
    service: climate.set_fan_mode
    entity_id: climate.main_thermostat_cooling_1
    data_template:
      fan_mode: >-
          {%- if is_state('input_select.hvac_fan_mode_main', 'Auto') -%}
              Auto Low
          {%- elif is_state('input_select.hvac_fan_mode_main', 'On') -%}
              On Low
          {%- endif -%}
#####
### Sets the hvac_fan_mode input_select when the main thermostat fan_mode is manually changed
#####
- alias: 'Set input_select based on main thermostat fan_mode'
  trigger:
    platform: state
    entity_id: climate.main_thermostat_cooling_1
  condition:
    condition: template
    value_template: '{{ trigger.to_state.attributes.fan_mode != trigger.from_state.attributes.fan_mode }}'
  action:
    service: input_select.select_option
    entity_id: input_select.hvac_fan_mode_main
    data_template:
      option: >-
          {%- if is_state_attr('climate.main_thermostat_cooling_1', 'fan_mode', 'Auto Low') -%}
              Auto
          {%- elif is_state_attr('climate.main_thermostat_cooling_1', 'fan_mode', 'On Low') -%}
              On
          {%- endif -%}

#####
### Sets the main thermostat operation_mode when the hvac_operation_mode input_select is changed
#####
- alias: 'Set main thermostat operation_mode based on input_select'
  trigger:
    platform: state
    entity_id: input_select.hvac_operation_mode_main
  action:
    service: climate.set_operation_mode
    entity_id: climate.main_thermostat_cooling_1
    data_template:
      operation_mode: "{{ states('input_select.hvac_operation_mode_main') }}"

#####
### Sets the hvac_operation_mode input_select when the mainthermostat operation_mode is manually changed
#####
- alias: 'Set input_select based on main thermostat operation_mode'
  trigger:
    platform: state
    entity_id: climate.main_thermostat_cooling_1
  condition:
    condition: template
    value_template: '{{ trigger.to_state.attributes.operation_mode != trigger.from_state.attributes.operation_mode }}'
  action:
    service: input_select.select_option
    entity_id: input_select.hvac_operation_mode_main
    data_template:
      option: '{{ states.climate.main_thermostat_cooling_1.attributes.operation_mode }}'

#####
### Sets the main thermostat temperature when the hvac_target_temp input_slider is changed
#####
- alias: 'Set main thermostat temperature based on input_slider'
  trigger:
    - platform: state
      entity_id: input_slider.hvac_target_temp_main
  action:
    - service: climate.set_temperature
      data_template:
        entity_id: >-
          {% if is_state('input_select.hvac_operation_mode_main', 'Heat') %}
              climate.main_thermostat_heating_1
          {% elif is_state('input_select.hvac_operation_mode_main', 'Cool') %}
              climate.main_thermostat_cooling_1
          {% endif %}
        temperature: "{{ states('input_slider.hvac_target_temp_main') }}"

#####
### Sets the hvac_target_temp input_slider when the main thermostat temperature is manually changed
#####
#- alias: 'Set input_slider based on main thermostat temperature'
#  trigger:
#    platform: state
#    entity_id: climate.main_thermostat_cooling_1
#  condition:
#    condition: template
#    value_template: '{{ trigger.to_state.attributes.temperature != trigger.from_state.attributes.temperature }}'
#  action:
#    service: input_slider.select_value
#    entity_id: input_slider.hvac_target_temp_main
#    value_template:
#      entity_id: >-
#        {% if is_state('input_select.hvac_operation_mode_main', 'Heat') %}
#            '{{ states.climate.main_thermostat_heating_1.attributes.temperature }}'
#        {% elif is_state('input_select.hvac_operation_mode_main', 'Cool') %}
#            '{{ states.climate.main_thermostat_cooling_1.attributes.temperature }}'
#        {% endif %}