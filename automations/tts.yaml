#- id: set_tts_endpoint_options
#  alias: Set TTS Endpoint Options
#  trigger:
#    platform: time
#    minutes: '/10'
#    seconds: 00
#  action:
#     service: input_select.select_option
#     data_template:
#      entity_id: input_select.tts_endpoint_select
#      options: >-
#        {%- set domains = [states.media_player ] -%}
#        {%- for domain in domains -%}
#        {%- if loop.first -%}
#        {%- endif -%}
#        {%- for item in domain if (item.attributes.media_content_type is defined and item.attributes['media_content_type'] == 'standby' and item.name != 'This Device' ) -%}
#        {%- if (item.attributes.media_content_type is defined and item.attributes['media_content_type'] == 'standby' and item.name != 'This Device' ) -%}
#        {{ item.name }}
#        {% endif -%}
#        {%- if "standby" in item.name -%}
#        {{ item.name }} ({{ item.state }}),
#        {% endif -%}
#        {%- endfor -%}
#        {%- endfor -%}

- id: announce_input_over_alexa
  alias: Announce Input Over Alexa
  trigger:
    - platform: state
      entity_id: input_text.tts_text
  action:
    - service: media_player.alexa_tts
      data_template:
        entity_id: media_player.{{ states.input_select.tts_endpoint_select.state }}
        message: "{{ states.input_text.tts_text.state }}"