- platform: command_line
  name: "XRP to USD"
  command: 'python3 /scripts/kraken_ripple.py'
  unit_of_measurement: "USD"
- platform: command_line
  name: "ETH to USD"
  command: 'python3 /scripts/kraken_eth.py'
  unit_of_measurement: "USD"
- platform: command_line
  name: "Speedtest Download"
  command: '/scripts/parse_speedtest.sh download'
  unit_of_measurement: "Mbit/s"
- platform: command_line
  name: "Speedtest Upload"
  command: '/scripts/parse_speedtest.sh upload'
  unit_of_measurement: "Mbit/s"
- platform: command_line
  name: "Speedtest Ping"
  command: '/scripts/parse_speedtest.sh latency'
  unit_of_measurement: "ms"
- platform: command_line
  name: "Database Size"
  command: '/bin/bash -c /scripts/get_db_size.sh'
  unit_of_measurement: "GB"
- platform: command_line
  name: "InfluxDB Size"
  command: '/bin/bash -c /scripts/get_influxdb_size.sh'
  unit_of_measurement: "MB"
- platform: command_line
  name: "BTC to USD"
  command: 'python3 /scripts/kraken_btc.py'
  unit_of_measurement: "USD"
- platform: command_line
  name: "Kids WiFi Status"
  command: 'php /scripts/ubnt/check_network.php Dev_Kids false'
- platform: command_line
  name: "/r/homeautomation Subsribers"
  command: 'php /scripts/hasub_sub.php'
- platform: command_line
  name: "IO Latency"
  command: '/scripts/disk_io.sh'
- platform: command_line
  name: snmp_sophos_wan_traffic
  command: snmpget -v 2c -c public -Oqv 192.168.9.1 1.3.6.1.2.1.2.2.1.10.3 1.3.6.1.2.1.2.2.1.16.3 | tr '\n' '|'
  scan_interval: 10
- platform: command_line
  command: python3 -c "import requests; print(requests.get('https://pypi.python.org/pypi/homeassistant/json').json()['info']['version'])"
  name: Current HA Version
  scan_interval: 3600
- platform: command_line
  command: /scripts/check_ha_mysql.sh
  name: Connection to MySql
  scan_interval: 60
- platform: command_line
  command: /scripts/time_diff.sh
  name: Time Drift
  scan_interval: 300
  unit_of_measurement: "s"
- platform: command_line
  command: /scripts/anova_control.py -m status -o h
  name: Anova Status
  json_attributes:
    - current_temp
    - is_running
    - is_timer_running
    - speaker_mode
    - target_temp
    - temp_unit
    - timer_length
    - alarm_active
    - job_type
    - job_stage
    - duration
    - job_start_time
  value_template: '{{value_json.current_temp}}'
  scan_interval: 15
# - platform: command_line
#   name: Last Alexa
#   command: '/scripts/alexa_remote_control.sh'

#Media PC SNMP Sensors - since the actual SNMP component doesn't work
- platform: command_line
  name: 'Media PC 1m Load'
  command: snmpget -v 2c -c public -Oqv 192.168.9.21 1.3.6.1.4.1.2021.10.1.3.1
- platform: command_line
  name: 'Media PC 5m Load'
  command: snmpget -v 2c -c public -Oqv 192.168.9.21 1.3.6.1.4.1.2021.10.1.3.2
- platform: command_line
  name: 'Media PC 15m Load'
  command: snmpget -v 2c -c public -Oqv 192.168.9.21 1.3.6.1.4.1.2021.10.1.3.3
- platform: command_line
  name: 'Media PC Disk Usage'
  command: snmpget -v 2c -c public -Oqv 192.168.9.21 1.3.6.1.4.1.2021.9.1.9.1
  unit_of_measurement: "%"
- platform: command_line
  name: 'Media PC Inode Usage'
  command: snmpget -v 2c -c public -Oqv 192.168.9.21 1.3.6.1.4.1.2021.9.1.10.1
  unit_of_measurement: "%"
- platform: command_line
  name: 'Media PC Total RAM'
  command: snmpget -v 2c -c public -Oqv 192.168.9.21 1.3.6.1.2.1.25.2.3.1.5.6
  unit_of_measurement: "KB"
- platform: command_line
  name: 'Media PC Free RAM'
  command: snmpget -v 2c -c public -Oqv 192.168.9.21 1.3.6.1.4.1.2021.4.6.0
  unit_of_measurement: "KB"